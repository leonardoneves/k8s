# Enable TLS for the Docker Registry
#tls:
#  enabled: true
#  existingSecret: wildcard-tls # Reuse the wildcard secret for the registry
#  certsTag: ""
# Extra environment variables for the Docker Registry
#extraEnvVars:
#  - name: REGISTRY_HTTP_RELATIVEURLS
#    value: "true"
#  - name: REGISTRY_HTTP_TLS_CERTIFICATE
#    value: "/certs/tls.crt" # Path to the TLS certificate inside the container
#  - name: REGISTRY_HTTP_TLS_KEY
#    value: "/certs/tls.key" # Path to the TLS key inside the container
# Mount the TLS certificate and key as a volume
#extraVolumeMounts:
#  - name: certs
#    mountPath: /certs
#    readOnly: true
#extraVolumes:
#  - name: certs
#    secret:
#      secretName: wildcard-tls # Use the wildcard secret for the registry
# Service configuration
#service:
#  type: ClusterIP
#  port: 5000

# values.yaml

# Secrets for basic authentication (htpasswd)
secrets:
  htpasswd: "leo:$2y$05$8o3j4damOS8Lvl0LSHHl1ecCb8p.7vssHVsxOgmMNGFUylqng2MEW"

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP" # Ensure NGINX uses HTTPS to communicate with the backend
    nginx.ingress.kubernetes.io/ssl-redirect: "true" # Redirect HTTP to HTTPS
  hosts:
    - registry.localk8s.localdomain # List of hostnames (must be strings)
  paths:
    - path: /
      pathType: Prefix
  tls:
    - secretName: wildcard-tls # Use the wildcard certificate for TLS termination
      hosts:
        - registry.localk8s.localdomain
